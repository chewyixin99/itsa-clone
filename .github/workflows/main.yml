name: BE Node.js Test

on:
  push:
    branches: 
      - main
      - master
  pull_request:
    branches: 
      - main
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.1
        env:
          MYSQL_DATABASE: testdb
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
          
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.8'

      - name: Install dependencies
        working-directory: ./auth-server
        run: npm ci

      - name: Run tests
        working-directory: ./auth-server
        run: npm test
  build-publish-fe:
    needs: test
    runs-on: ubuntu-latest
    steps:    
      - name: Setup AWS ECR Details
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{secrets.AWS_REGION}}


      - name: Login to Amazon ECR
        id: login-pf-aws-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.8'
          
      - name: Install dependencies
        working-directory: ./initial-app
        run: npm ci
      - name: 'Create env file'
        run: |
          echo "${{ secrets.FE_ENV_FILE }}" > ./initial-app/.env
      - run: ls
      - name: 'Build Application'
        working-directory: ./initial-app
        run: npm build

      - name: Build and push the tagged docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
          IMAGE_TAG: latest
        working-directory: ./initial-app
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
    
